#! /bin/sh

# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

CONFIGURATION=$1
WITH_IODBC=$2
SKIP_AWS_SDK=$3
if [ "${CONFIGURATION,,}" != "debug" ] && [ "${CONFIGURATION,,}" != "release" ]; then
  echo "Build configuration must be debug or release but is ${CONFIGURATION}"
  exit 1
fi

export ROOT_REPO_PATH=$(cd "$(dirname "$0")/.."; pwd -P)
cd ${ROOT_REPO_PATH}/libs/aws-rds-odbc

if [ -z "${SKIP_AWS_SDK}" ] || [ ${SKIP_AWS_SDK,,} == "false" ]
then
    # Build the AWS SDK
    echo "Building the AWS SDK"
    ./scripts/build_aws_sdk_linux.sh Release
    if [ $? -ne 0 ]; then
      echo "AWS SDK build failed"
      exit 1
    fi
fi

# Prep the aws-rds-odbc builds
echo "Prepping the ansi aws-rds-odbc build"
if [ "${CONFIGURATION,,}" == "debug" ]; then
  cmake -S . -B build_ansi -DCMAKE_BUILD_TYPE=Debug > ./cmake.log 2>&1
else
  cmake -S . -B build_ansi > ./cmake.log 2>&1
fi
if [ $? -ne 0 ]; then
  echo "ansi aws-rds-odbc build prep failed"
  echo "cmake.log:"
  cat ./cmake.log
  exit 1
fi

echo "Prepping the unicode aws-rds-odbc build"
if [ "${CONFIGURATION,,}" == "debug" ]; then
  cmake -S . -B build_unicode -DUNICODE_BUILD=ON -DCMAKE_BUILD_TYPE=Debug > ./cmake.log 2>&1
else
  cmake -S . -B build_unicode -DUNICODE_BUILD=ON > ./cmake.log 2>&1
fi
if [ $? -ne 0 ]; then
  echo "unicode aws-rds-odbc build prep failed"
  echo "cmake.log:"
  cat ./cmake.log
  exit 1
fi

# Build aws-rds-odbc
echo "Building ansi version of aws-rds-odbc"
cmake --build build_ansi > ./cmake.log 2>&1
if [ $? -ne 0 ]; then
  echo "ansi aws-rds-odbc build failed"
  echo "cmake.log:"
  cat ./cmake.log
  exit 1
fi

echo "Building unicode version of aws-rds-odbc"
cmake --build build_unicode > ./cmake.log 2>&1
if [ $? -ne 0 ]; then
  echo "unicode aws-rds-odbc build failed"
  echo "cmake.log:"
  cat ./cmake.log
  exit 1
fi

# Prep and build aws-pgsql-odbc
echo "Prepping the aws-pgsql-odbc build"
cd ${ROOT_REPO_PATH}
./bootstrap
if [ $? -ne 0 ]; then
  echo "bootstrap failed"
  exit 1
fi

if [ -z "${WITH_IODBC}" ] || [ ${WITH_IODBC,,} == "false" ]; then
  echo "Configuring the driver with unixodbc"
  if [ "${CONFIGURATION,,}" == "debug" ]; then
    ./configure --enable-debug
  else
    ./configure
  fi
else
  echo "Configuring the driver with iodbc"
  if [ "${CONFIGURATION,,}" == "debug" ]; then
    ./configure --with-iodbc --enable-debug
  else
    ./configure --with-iodbc
  fi
fi
if [ $? -ne 0 ]; then
  echo "configure failed"
  exit 1
fi

echo "Building and installing aws-pgsql-odbc"
make
if [ $? -ne 0 ]; then
  echo "make failed"
  exit 1
fi

make install
if [ $? -ne 0 ]; then
  echo "make install failed"
  exit 1
fi
