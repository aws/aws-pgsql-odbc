name: Build And Regression Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

env:
  BUILD_TYPE: Release
  CMAKE_GENERATOR: Visual Studio 17 2022

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

  # Workflow versions. Increment these when you make changes to a build step in the workflow and
  # you want the step to run, but the corresponding cache is causing the step to be skipped.
  WORKFLOW_VERSION_POSTGRESQL: '1' # for build steps related to the 'cachePostgres' cache

  # Software versions. 
  POSTGRESQL_SOURCE_TAG: 'REL_17_BETA2'
  POSTGRESQL_PACKAGE_FILEID: '1259019'
  OPENSSL_VERSION: '3_3_1'
  PKGCONFIGLITE_VERSION: '0.28-1'
  WINFLEXBISON_VERSION: '2.5.24'
  DIFFUTILS_VERSION: '2.8.7-1'

permissions:
  contents: read

jobs:
  build-and-test-driver:
    name: Build and run regression tests
    runs-on: windows-latest

    steps:
      - name: Clone Repository
      uses: actions/checkout@v4
      if: ${{steps.cachePostgresSource.outputs.cache-hit != 'true' && steps.cachePostgres.outputs.cache-hit != 'true'}}
      with:
          fetch-depth: 1

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3.2

      - name: Cache AWS SDK libraries
        id: cache-dynamic-aws-sdk
      uses: actions/cache@v4
      id: cacheDiffutilsZip
      with:
          path: |
            aws_sdk
          key: ${{ runner.os }}-aws-sdk-dynamic-lib

      - name: Build the AWS SDK C++
        working-directory: ./scripts
        if: steps.cache-dynamic-aws-sdk.outputs.cache-hit != 'true'
      run: |
          .\build_aws_sdk_win.ps1 x64 ${{ env.BUILD_TYPE}} OFF "${{env.CMAKE_GENERATOR}}"

      - name: Build the driver
        working-directory: ./winbuild
        run: .\BuildAll.ps1 -Platform x64

      - name: Setup nmake
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build the installer
        working-directory: ./installer
      run: |
          mkdir x64
          .\buildInstallers.ps1 x64

      - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
          name: AWSPgODBC Installer
          path: ./installer/x64/*.msi
        retention-days: 5
        if-no-files-found: error

    - name: Create mimalloc Release
      if: startsWith(github.ref, 'refs/tags/REL-')
      uses: ncipollo/release-action@v1.14.0
      id: create_mimalloc_release
      with:
        tag: ${{github.ref_name}}-mimalloc
        commit: ${{github.sha}}
        body: A build of ${{github.ref_name}} that uses the mimalloc allocator for improved performance.
        makeLatest: false
        draft: false
        prerelease: false
        token: ${{secrets.RELEASE_TOKEN}}
        artifacts: "psqlodbc/winbuild/mimalloc/installer/x64/*.ms?,psqlodbc/winbuild/mimalloc/installer/x86/*.ms?,psqlodbc/winbuild/mimalloc/installer/psqlodbc-setup/bin/Release/psqlodbc-setup.exe"
    - name: Create Standard Release
      if: startsWith(github.ref, 'refs/tags/REL-')
      uses: ncipollo/release-action@v1.14.0
      id: create_standard_release
      with:
        makeLatest: true
        draft: false
        prerelease: false
        token: ${{secrets.RELEASE_TOKEN}}
        artifacts: "psqlodbc/winbuild/standard/installer/x64/*.ms?,psqlodbc/winbuild/standard/installer/x86/*.ms?,psqlodbc/winbuild/standard/installer/psqlodbc-setup/bin/Release/psqlodbc-setup.exe"
