name: Dockerized Linux Integration Tests
run-name: aws-pgsql-odbc Dockerized Linux Integration Tests - ${{ github.event.head_commit.message }}

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**/*.md'
      - '**/*.jpg'
      - '**/*.png'
      - '**/README.*'
      - '**/LICENSE.*'
      - 'docs/**'
      - 'ISSUE_TEMPLATE/**'
      - '**/remove-old-artifacts.yml'
      - '**/release.yml'

concurrency:
  group: linux-integration-${{ github.ref }}
  cancel-in-progress: false # Do not cancel to ensure cleanup is ran

permissions:
  id-token: write
  contents: read

jobs:
  linux-integration-tests:
    name: Linux Integration Tests
    runs-on: ubuntu-latest
    env:
      CMAKE_GENERATOR: Unix Makefiles

    steps:
      - name: Checkout aws-pgsql-odbc
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 1

      - name: Initialize submodules
        run: |
          git submodule update --init --recursive

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: pgodbc-linux-integration
          output-credentials: true

      - name: Run Integration Tests
        working-directory: ${{ github.workspace }}/testframework
        run: |
          ./gradlew --no-parallel --no-daemon test-integration --info
        env:
          TEST_DSN_ANSI: 'psqlODBC_ansi'
          TEST_DSN_UNICODE: 'psqlODBC_unicode'
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}
          AWS_SESSION_TOKEN: ${{ steps.creds.outputs.aws-session-token }}
          RDS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TEST_IAM_USER: ${{ secrets.TEST_IAM_USER }}
          DRIVER_PATH: ${{ github.workspace }}

      - name: Get Github Action IP
        if: always()
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Remove Github Action IP
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-name default \
            --protocol tcp \
            --port 5432 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32 \
          2>&1 > /dev/null;

      - name: Archive log results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'integration-test-logs'
          path: logs
          retention-days: 3
